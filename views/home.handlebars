<h1>Luftdaten Server</h1>

<h2>Temperature</h2>
<div id="chart_temperature" style="width: 900px; height: 500px"></div>

<h2>Humidity</h2>
<div id="chart_humidity" style="width: 900px; height: 500px"></div>

<h2>Last 20 values</h2>
<table>
  <thead>
    <tr>
      {{#each headers}}
      <td><strong>{{this}}</strong></td>
      {{/each}}
    </tr>
  </thead>
  {{#each entries}}
  <tr>
    {{#each values}}
    <td>{{this}}</td>
    {{/each}}
  </tr>
  {{/each}}
</table>

<script type="text/javascript">
  google.charts.load('current', {packages: ['line', 'corechart']});
  google.charts.setOnLoadCallback(drawChart);

  function buildChart(elementId, title, vAxisName, vAxisMax, vAxisFormat, entries) {
    const element = document.getElementById(elementId);

    const dataTable = new google.visualization.DataTable();
    dataTable.addColumn('date', 'Time');
    dataTable.addColumn('number', vAxisName);
    dataTable.addRows(entries);

    const options = {
      height: 500,
      title,
      vAxis: {
        format: vAxisFormat,
        viewWindow: {
          max: vAxisMax,
        },
      },
      width: 900,
    };

    const chart = new google.visualization.LineChart(element);
    chart.draw(dataTable, options);
  }

  async function drawChart() {
    const response = await fetch('/data/latest/?limit=300');
    const jsonData = await response.json();

    const temperatureEntries = jsonData.map(entry => {
      const {created_at, temperature} = entry;
      return [new Date(created_at), temperature];
    });

    const humidityEntries = jsonData.map(entry => {
      const {created_at, humidity} = entry;
      return [new Date(created_at), humidity];
    });

    buildChart('chart_temperature', 'Temperature in the last 12 hours', 'Temperature', 40, '## Â°C', temperatureEntries);
    buildChart('chart_humidity', 'Humidity in the last 12 hours', 'Humidity', 70, '##,## % RH', humidityEntries);
  }
</script>
